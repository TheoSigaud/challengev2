import Head from 'next/head'
import React, {useEffect, useState} from "react";
import HomeLayout from "@/components/layouts/Home";
import {useRouter} from "next/router";
import DisplayImages from "@/components/announcement/DisplayImages";

interface Announcement {
    name: string;
    description: string;
    firstImage: string;
    base64Images: string[];
    type: string;
    announcementCategories: AnnouncementCategory[];
}

interface AnnouncementCategory {
    category: Category;
}

interface Category {
    name: string;
}


export default function Announcement() {
    const [announcement, setAnnouncement] = useState<Announcement[]>([]);
    const [deleteModal, setDeleteModal] = useState<boolean>(false)
    const router = useRouter();

    useEffect(() => {
        document.body.classList.add("bg-custom-light-orange");
    });

    useEffect(() => {
        if (!router.isReady) return;

        fetch(`http://localhost:3001/announcement/${router.query.id}`, {
            method: 'GET',
        })
            .then(response => response.json())
            .then((data) => {
                setAnnouncement(data)
                console.log(data);
            }).catch((error) => {
            console.log(error);

        });
    }, [router.isReady]);

    return (
        <>
            <Head>
                <title>Ludotter</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <HomeLayout>
                <section>
                    <div className="container mx-auto pt-10 h-screen">
                        {announcement.length > 0 &&
                            <div className="grid grid-cols-1 md:grid-cols-12 h-4/6">
                                <DisplayImages images={announcement[0].base64Images}/>
                                <div className="md:col-span-7 md:col-start-7 mt-10 md:mt-10">
                                    <h2 className="mb-2 font-semibold leading-none text-gray-900 text-5xl">{announcement[0].name}</h2>
                                    <dl className="mt-16">
                                        <dt className="mb-2 font-semibold leading-none text-gray-900 text-2xl">Description</dt>
                                        <dd className="text-xl text-gray-800 mb-5">{announcement[0].description}</dd>
                                    </dl>
                                    <div className="flex justify-between">
                                        <div className="flex flex-col">
                                            <p>Type de l'annonce :</p>
                                            <p className="capitalize">{announcement[0].type}</p>
                                        </div>
                                        <div className="flex flex-col">
                                            <p>Cat√©gories</p>
                                            <div className="py-5">
                                                {announcement[0].announcementCategories.map((item, index) => {
                                                    return (
                                                        <span key={index}
                                                              className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-400 text-white mr-2">
                                                        {item.category.name}
                                                    </span>
                                                    );
                                                })}
                                            </div>
                                        </div>

                                        <button onClick={() => setDeleteModal(true)}
                                                className="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                                                type="button">
                                            Toggle modal
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                        <div className={`${deleteModal ? 'block' : 'hidden'} fixed top-0 left-0 right-0 z-50 p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full`}>
                            <div className="relative w-full max-w-md max-h-full">
                                <div className="relative bg-white rounded-lg shadow dark:bg-gray-700">
                                    <button type="button"
                                            className="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white"
                                            data-modal-hide="popup-modal">
                                        <svg aria-hidden="true" className="w-5 h-5" fill="currentColor"
                                             viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd"
                                                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                                  clip-rule="evenodd"></path>
                                        </svg>
                                        <span className="sr-only">Close modal</span>
                                    </button>
                                    <div className="p-6 text-center">
                                        <svg aria-hidden="true"
                                             className="mx-auto mb-4 text-gray-400 w-14 h-14 dark:text-gray-200"
                                             fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                             xmlns="http://www.w3.org/2000/svg">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        <h3 className="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Are
                                            you sure you want to delete this product?</h3>
                                        <button data-modal-hide="popup-modal" type="button"
                                                className="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                                            Yes, I'm sure
                                        </button>
                                        <button data-modal-hide="popup-modal" type="button"
                                                className="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">No,
                                            cancel
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </HomeLayout>
        </>
    )
}